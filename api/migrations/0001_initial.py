# Generated by Django 2.0 on 2017-12-16 03:55

import api.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x', models.IntegerField()),
                ('y', models.IntegerField()),
                ('z', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Population',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=240)),
            ],
        ),
        migrations.CreateModel(
            name='RagarajaInstructions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instruction', models.CharField(max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Simulation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=240)),
                ('notes', models.CharField(default='', max_length=960)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('deployment_code', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4)])),
                ('chromosome_bases', models.CharField(default='01', max_length=240, validators=[api.models.Simulation.validate_chromose])),
                ('background_mutation', models.DecimalField(decimal_places=3, default=0.1, max_digits=5)),
                ('additional_mutation', models.DecimalField(decimal_places=3, default=0.0, max_digits=5)),
                ('chromosome_size', models.IntegerField(default=30)),
                ('genome_size', models.IntegerField(default=1)),
                ('max_tape_length', models.IntegerField(default=50)),
                ('clean_cell', models.BooleanField(default=True)),
                ('interpret_chromosome', models.BooleanField(default=True)),
                ('max_codon', models.IntegerField(default=2000)),
                ('population_size', models.IntegerField(default=100)),
                ('eco_cell_capacity', models.IntegerField(default=100)),
                ('world_x', models.IntegerField(default=5)),
                ('world_y', models.IntegerField(default=5)),
                ('world_z', models.IntegerField(default=5)),
                ('goal', models.IntegerField(default=0)),
                ('maximum_generations', models.IntegerField(default=100)),
                ('fossilized_ratio', models.DecimalField(decimal_places=3, default=0.01, max_digits=5)),
                ('fossilized_frequency', models.IntegerField(default=20)),
                ('print_frequency', models.IntegerField(default=10)),
                ('ragaraja_version', models.IntegerField(default=0)),
                ('eco_buried_frequency', models.IntegerField(default=100)),
                ('database_file', models.CharField(default='simulation.db', max_length=240, validators=[django.core.validators.FileExtensionValidator(['.db', '.sqlite', '.sqlite3'])])),
                ('database_logging_frequency', models.IntegerField(default=1)),
                ('mutation_type', models.CharField(choices=[('PT', 'Point'), ('IN', 'Insert'), ('DL', 'Delete'), ('IV', 'Invert'), ('DP', 'Duplicate'), ('TL', 'Translocate')], default='PT', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Trial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('status', models.CharField(choices=[('I', 'Idle'), ('R', 'Running'), ('D', 'Done')], default='I', max_length=1)),
                ('simulation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trials', to='api.Simulation')),
            ],
        ),
        migrations.AddField(
            model_name='ragarajainstructions',
            name='simulation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ragaraja_instructions', to='api.Simulation'),
        ),
        migrations.AddField(
            model_name='population',
            name='simulation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='populations', to='api.Simulation'),
        ),
        migrations.AddField(
            model_name='location',
            name='population',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='api.Population'),
        ),
    ]
